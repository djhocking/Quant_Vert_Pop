######################################################
##                                                  ##
##             Wayah Abundance Models               ##
##              Analysis in unmarked                ##
##                   Fall, 2012                     ##
##       Grant M. Connette (grmcco@gmail.com)       ##
##             University of Missouri               ##
##                                                  ##
######################################################
######################################################
#                                                    #
#   ________________ Script Index ________________   #
#   Line  23 ..... Load Count Data                   #
#   Line  41 ..... Exploratory Histograms            #
#   Line  83 ..... Bundling Data for Unmarked        #
#   Line 137 ..... Fit Plethodon shermani Models     #
#   Line 293 ..... Fit Models for Stream-breeders    #
#   Line 445 ..... Fit Threshold Models              #
#   Line 565 ..... Making Figures                    #
#                                                    #
######################################################

# Load Libraries #
library(unmarked)
library(DMwR)
library(AICcmodavg)

# Import  Data
setwd("C:/Users/Owner/Documents/1_Highlands2009_2011/Completed/2012_Occupancy/Data")
RNCounts <- read.csv("Occupancy.csv", header = TRUE)

# Sort and make long form count data into single row per survey point (Plethodon shermani,
# Desmognathus wrighti, and Stream-Breeding Salamanders Separated)
RNCounts <- RNCounts[with(RNCounts, order(Survey, Point)), ]
YStream <- matrix(RNCounts$AllStream, nrow = 136, ncol = 5, byrow = FALSE)
YPlsh <- matrix(RNCounts$AllPlsh, nrow = 136, ncol = 5, byrow = FALSE)
YDewr <- matrix(RNCounts$AllDewr, nrow = 136, ncol = 5, byrow = FALSE)


##############################################################################################
#  Exploring Count Distributions: Creating Histograms of Mean Counts for Each Species Group  #
##############################################################################################

par(mfrow=c(1,2))
par(mar=c(2,2,2,1))
par(oma=c(3,3,3,1))

tmp<-hist(apply(YPlsh,1,mean), breaks=seq(0,9,,10), xaxt="n", main="")
mtext("(a)", side<-3, line=0, at=-1, cex=1.1, col="black",outer=FALSE)
axis(1, at=seq(0,8,,5), labels=seq(0,8,,5))

hist(apply(YStream,1,mean), breaks=seq(0,9,,10), main="")
mtext("(b)", side<-3, line=0, at=-2, cex=1.1, col="black",outer=FALSE)
axis(1, at=seq(0,8,,5), labels=seq(0,8,,5))

hist(apply(YDewr,1,mean), breaks=seq(0,4,,9), main="", axes=FALSE)
mtext("(c)", side<-3, line=0, at=-1, cex=1.1, col="black",outer=FALSE)
axis(1, seq(0,4,,5))
axis(2, seq(0,120,,5))

mtext("Mean count", side<-1, line=0.5, at=.5, cex=1.0, col="black",outer=TRUE)
mtext("Number of survey points", side<-2, line=0.5, at=.5, cex=1.0, col="black",outer=TRUE)
mtext("Distribution of Salamander Counts by Species Group", side<-3, line=1, at=0.5, cex=1.4, col="black",outer=TRUE)


####################################################################################################
#  Exploring Count Distributions: Creating histogram of survey points X timber stand age class     #
####################################################################################################

par(mfrow=c(1,1))
par(mar=c(2,2,2,1))
par(oma=c(3,3,3,1))

hist(SiteCovs$Stand1, main="", breaks=seq(0,140,,80)) 

mtext("Stand age (N=136 points)", side<-1, line=0.5, at=.5, cex=1.0, col="black",outer=TRUE)
mtext("Number of survey points", side<-2, line=0.5, at=.5, cex=1.0, col="black",outer=TRUE)
mtext("Distribution of Salamander Counts by Species Group", side<-3, line=0, at=0.5, cex=1.4, col="black",outer=TRUE)


####################################################################################################
####################################################################################################
#  Bundling/Formatting Data For Unmarked
####################################################################################################

# Assign variable types
for (i in 1:ncol(YStream)){
  YStream[,i]<-as.integer(YStream[,i])
  YPlsh[,i]<-as.integer(YPlsh[,i])
  YDewr[,i]<-as.integer(YDewr[,i])
}

# List Possible Observation Covariates
ObsCovs <- list(Time = matrix(RNCounts$Time1, 136, 5, byrow = FALSE),
                Time2 = matrix((RNCounts$Time1^2), 136, 5, byrow = FALSE),
                Surftemp = matrix(RNCounts$Surftemp, 136, 5, byrow = FALSE),
                Rain7 = matrix(RNCounts$Rain7, 136, 5, byrow = FALSE),
                Rain3 = matrix(RNCounts$Rain3, 136, 5, byrow = FALSE),
                Rain1 = matrix(RNCounts$Rain1, 136, 5, byrow = FALSE),
                Date = matrix(RNCounts$Date1, 136, 5, byrow = FALSE))

# Import Site Covariates
SiteCovs <- read.csv("OccuSiteCovs.csv", header = TRUE)
SiteCovs <- data.frame(Elev=SiteCovs[,"Elevation"],
                       Stand1=SiteCovs[,"StandAge"],
                       Stand2=(exp(SiteCovs[,"StandAge"]/100)),
                       Stand3=log(SiteCovs[,"StandAge"]),
                       North=SiteCovs[,"Northness"],
                       East=SiteCovs[,"Eastness"],
                       TPI30=SiteCovs[,"TPI30"],
                       TPI100=SiteCovs[,"TPI100"],
                       Dist=SiteCovs[,"Dist"],
                       DistWt=SiteCovs[,"DistWt"],
                       TWI=SiteCovs[,"TWI"],
                       Solar=SiteCovs[,"Solar"],
                       Slope=SiteCovs[,"Slope"],
                       Point=SiteCovs[,"Point"],
                       Stream=SiteCovs[,"Stream_Dist"],
                       Litter=SiteCovs[,"Litter"])

# Create Unmarked Dataframe for each "species group"
Plsh.umf <- unmarkedFramePCount(y = YPlsh, siteCovs = SiteCovs, obsCovs = ObsCovs)
Stream.umf <- unmarkedFramePCount(y = YStream, siteCovs = SiteCovs, obsCovs = ObsCovs)
Dewr.umf <- unmarkedFramePCount(y = YDewr, siteCovs = SiteCovs, obsCovs = ObsCovs)

# Standardize Covariates
obsCovs(Plsh.umf)<- scale(obsCovs(Plsh.umf))
siteCovs(Plsh.umf)<-scale(siteCovs(Plsh.umf))
obsCovs(Stream.umf)<- scale(obsCovs(Stream.umf))
siteCovs(Stream.umf)<-scale(siteCovs(Stream.umf))
obsCovs(Dewr.umf)<- scale(obsCovs(Dewr.umf))
siteCovs(Dewr.umf)<-scale(siteCovs(Dewr.umf))


##############################################################################################
##############################################################################################
##  Fit Models - Plethodon shermani                                                         ##
##############################################################################################

# Fit Detection
###############################################################

#Intercept only
(fm1.PS <- pcount(~1 ~1, mixture="NB", K=1000, Plsh.umf))
#Rainfall only
fm2.PS <- pcount(~Rain7 ~1, mixture="NB", Plsh.umf)
#Environmental only
fm3.PS <- pcount(~Rain7 + Surftemp~1, mixture="NB", Plsh.umf)
#Full
fm4.PS <- pcount(~Time + Date + Surftemp + Rain7~1, mixture="NB", Plsh.umf)
#Full.Quad
(fm4.5.PS <- pcount(~Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) + Rain7~1, mixture="NB", Plsh.umf))

# Generate AIC Table #
# Name Models
mspart1.PS<- fitList(
  "lam(.)p(.)" = fm1.PS,
  "lam(.)p(Rain7)" = fm2.PS,
  "lam(.)p(Rain7 + Surftemp)" = fm3.PS,
  "lam(.)p(Rain7 + Surftemp + Time + Date)" = fm4.PS,
  "lam(.)p(Rain7 + Surftemp^2 + Time^2 + Date" = fm4.5.PS)

(ms1.PS <- modSel(mspart1.PS))
print(coef(ms1.PS),digits=2)

# Generate AICc Table #
Cand.models <- list(fm1.PS, fm2.PS, fm3.PS, fm4.PS, fm4.5.PS)
Modnames <- c("lam(.)p(.)", "lam(.)p(Rain7)", "lam(.)p(Rain7 + Surftemp)",
              "lam(.)p(Rain7 + Surftemp + Time + Date)", "lam(.)p(Rain7 + Surftemp^2 + Time^2 + Date")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Fit Abundance Models with Linear Stand Age Term
###############################################################

#Intercept only
fm5.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ 1, mixture="NB", Plsh.umf)
#Stand only
fm6.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stand1, mixture="NB", Plsh.umf)
#Simple Topographical
fm7.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand2, mixture="NB", Plsh.umf)
#Wetness only
fm8.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ TWI + Stand1, mixture="NB", Plsh.umf)
#TPI
fm9.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + TPI100 + Elev + Stand1, mixture="NB", Plsh.umf)
#TWI/Elev
fm10.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ TWI + Elev + Stand1, mixture="NB", Plsh.umf)
#Local Factors
fm11.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + TPI100 + Stream + Litter + Stand1, mixture="NB", Plsh.umf)
#Global
fm12.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stand1 + Stream, mixture="NB", Plsh.umf)

# Generate AIC Table #
# Name Models
mspart2.PS<- fitList(
  "lam(.)p(Full)" = fm5.PS,
  "lam(Stand)p(Full)" = fm6.PS,
  "lam(Aspect+Elev+Stand)p(Full)" = fm7.PS,
  "lam(TWI+Stand)p(Full)" = fm8.PS,
  "lam(Aspect+TPI100+Elev+Stand)p(Full)" = fm9.PS,
  "lam(TWI+Elev+Stand)p(Full)" = fm10.PS,
  "lam(Aspect+TPI+Stream+Litter+Stand)p(Full)" = fm11.PS,  
  "lam(Litter+Aspect+TPI100+TWI+Elev+Stream+Stand)p(Full)" = fm12.PS)

(ms2.PS <- modSel(mspart2.PS))
print(coef(ms2.PS),digits=2)

# Generate AICc Table #
Cand.models <- list(fm5.PS, fm6.PS, fm7.PS, fm8.PS, fm9.PS, fm10.PS, fm11.PS, fm12.PS)
Modnames <- c("lam(.)p(Full)", "lam(Stand)p(Full)", "lam(Aspect+Elev+Stand)p(Full)",
              "lam(TWI+Stand)p(Full)", "lam(Aspect+TPI100+Elev+Stand)p(Full)", "lam(TWI+Elev+Stand)p(Full)",
              "lam(Aspect+TPI+Stream+Litter+Stand)p(Full)", "lam(Litter+Aspect+TPI100+TWI+Elev+Stream+Stand)p(Full)")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Compare Models with complex stand age relationships
###############################################################

fm13.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1, mixture="NB", Plsh.umf)
fm14.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand2, mixture="NB", Plsh.umf)
fm15.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand3, mixture="NB", Plsh.umf)
fm16.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1*Dist, mixture="NB", Plsh.umf)
fm17.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand2*Dist, mixture="NB", Plsh.umf)
fm18.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand3*Dist, mixture="NB", Plsh.umf)

# Note: We explored a range of Ks for integration (100-3000) in these NegBin models. AIC values increased in incrementally smaller steps
# but parameter estimates were not greatly affected, only the relative scales for estimated abundance and detection probability.  Our final
# analysis was based on the default (max count + 100) which seemed reasonable given the typical densities of our species

# Generate AIC Table #
# Name Models
mspart3.PS<- fitList(
  "Linear" = fm13.PS,
  "Exponential" = fm14.PS,
  "Logarithmic" = fm15.PS,
  "Linear Distance"=fm16.PS,
  "Exponential Distance"=fm17.PS,
  "Logarithmic Distance"=fm18.PS)

(ms3.PS <- modSel(mspart3.PS))
print(coef(ms3.PS),digits=2)

# Generate AICc Table #
Cand.models <- list(fm13.PS, fm14.PS, fm15.PS, fm16.PS, fm17.PS, fm18.PS)
Modnames <- c("Linear", "Exponential", "Logarithmic", "Linear Distance",
              "Exponential Distance", "Logarithmic Distance")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Goodness-of-fit for Intercept-only and Top-ranked Models
##################################################################

# Fit stats function
fitstats <- function(fm) {
  observed <- getY(fm@data)
  expected <- fitted(fm)
  resids <- residuals(fm)
  sse <- sum(resids^2,na.rm=TRUE)
  chisq <- sum((observed - expected)^2 / expected,na.rm=TRUE)
  freeTuke <- sum((sqrt(observed) - sqrt(expected))^2,na.rm=TRUE)
  out <- c(SSE=sse, Chisq=chisq, freemanTukey=freeTuke)
  return(out)
}

(fmPSNull.pb <- parboot(fm1.PS, fitstats, nsim=500, report=1))
(fmPSFull.pb <- parboot(fm14.PS, fitstats, nsim=500, report=1))


# Check residuals for spatial autocorrelation of points within stands
##########################################################################################

Residuals<-t(residuals(fm18.AB))
Corr<-cor(Residuals,Residuals)
CorrMatrix<-(abs(Corr))
MeanCorr<-mean(CorrMatrix)
SDcorr<-sd(as.vector(CorrMatrix))
StandPairs<-matrix(1:136, nrow=2)

PairCorr<-seq(1:68)
for (i in 1:68){
PairCorr[i]<-abs(Corr[((i*2)-1),(i*2)])
}


##############################################################################################
##############################################################################################
#  Fit Models - Stream-breeding Salamanders
##############################################################################################

# Fit Detection
###############################################################

#Intercept only
fm1.AB <- pcount(~1 ~1, mixture="ZIP", Stream.umf)
#Rainfall only
fm2.AB <- pcount(~Rain7 ~1, mixture="ZIP", Stream.umf)
#Environmental only
fm3.AB <- pcount(~Rain7 + Surftemp~1, mixture="ZIP", Stream.umf)
#Full
fm4.AB <- pcount(~Rain7 + Time + Date + Surftemp~1, mixture="ZIP", Stream.umf)
#Full.Quad
fm4.5.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2)~1, mixture="ZIP", Stream.umf)

# Generate AIC Table #
# Name Models
mspart1.AB<- fitList(
  "lam(.)p(.)" = fm1.AB,
  "lam(.)p(Rain7)" = fm2.AB,
  "lam(.)p(Rain7 + Surftemp)" = fm3.AB,
  "lam(.)p(Rain7 + Surftemp + Time + Date)" = fm4.AB,
  "lam(.)p(Rain7 + Surftemp^2 + Time^2 + Date" = fm4.5.AB)

(ms1.AB <- modSel(mspart1.AB))
print(coef(ms1.AB),digits=2)

# Generate AICc Table #
Cand.models <- list(fm1.AB, fm2.AB, fm3.AB, fm4.AB, fm4.5.AB)
Modnames <- c("lam(.)p(.)", "lam(.)p(Rain7)", "lam(.)p(Rain7 + Surftemp)",
              "lam(.)p(Rain7 + Surftemp + Time + Date)", "lam(.)p(Rain7 + Surftemp^2 + Time^2 + Date")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Fit Abundance Models with Linear Stand Age Term
###############################################################

#Intercept only
fm5.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ 1, mixture="ZIP", Stream.umf)
#Stand only
fm6.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stand1, mixture="ZIP", Stream.umf)
#Simple Topographical
fm7.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1, mixture="ZIP", Stream.umf)
#Wetness only
fm8.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ TWI + Stand1, mixture="ZIP", Stream.umf)
#TPI
fm9.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + TPI100 + Elev + Stand1, mixture="ZIP", Stream.umf)
#TWI/Elev
fm10.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ TWI + Elev + Stand1, mixture="ZIP", Stream.umf)
#Local Factors
fm11.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + TPI100 + Stream + Litter + Stand1, mixture="ZIP", Stream.umf)
#Global
fm12.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stand1 + Stream, mixture="ZIP", Stream.umf)

# Generate AIC Table #
# Name Models
mspart2.AB<- fitList(
  "lam(.)p(Full)" = fm5.AB,
  "lam(Stand)p(Full)" = fm6.AB,
  "lam(Aspect+Elev+Stand)p(Full)" = fm7.AB,
  "lam(TWI+Stand)p(Full)" = fm8.AB,
  "lam(Aspect+TPI100+Elev+Stand)p(Full)" = fm9.AB,
  "lam(TWI+Elev+Stand)p(Full)" = fm10.AB,
  "lam(Aspect+TPI+Stream+Litter+Stand)p(Full)" = fm11.AB,  
  "lam(Litter+Aspect+TPI100+TWI+Elev+Stream+Stand)p(Full)" = fm12.AB)

(ms2.AB <- modSel(mspart2.AB))
print(coef(ms2.AB),digits=2)

# Generate AICc Table #
Cand.models <- list(fm5.AB, fm6.AB, fm7.AB, fm8.AB, fm9.AB, fm10.AB, fm11.AB, fm12.AB)
Modnames <- c("lam(.)p(Full)", "lam(Stand)p(Full)", "lam(Aspect+Elev+Stand)p(Full)",
              "lam(TWI+Stand)p(Full)", "lam(Aspect+TPI100+Elev+Stand)p(Full)", "lam(TWI+Elev+Stand)p(Full)",
              "lam(Aspect+TPI100+Stream+Litter+Stand)p(Full)", "lam(Litter+Aspect+TPI100+TWI+Elev+Stream+Stand)p(Full)")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Compare Models with Complex Stand Age Relationships
###############################################################

fm13.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stand1 + Stream, mixture="ZIP", Stream.umf)
fm14.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stand2 + Stream, mixture="ZIP", Stream.umf)
fm15.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stand3 + Stream, mixture="ZIP", Stream.umf)
fm16.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stream + Dist*Stand1, mixture="ZIP", Stream.umf)
fm17.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stream + Dist*Stand2, mixture="ZIP", Stream.umf)
fm18.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stream + Dist*Stand3, mixture="ZIP", Stream.umf)

#Note, model output not sensitive to changes in K for integration

# Generate AIC Table #
# Name Models
mspart3.AB<- fitList(
  "Linear" = fm13.AB,
  "Exponential" = fm14.AB,
  "Logistic" = fm15.AB,
  "Linear Distance"=fm16.AB,
  "Exponential Distance"=fm17.AB,
  "Logistic Distance"=fm18.AB)

(ms3.AB <- modSel(mspart3.AB))
print(coef(ms3.AB),digits=2)

# Generate AICc Table #
Cand.models <- list(fm13.AB, fm14.AB, fm15.AB, fm16.AB, fm17.AB, fm18.AB)
Modnames <- c("Linear", "Exponential", "Logarithmic", "Linear Distance",
              "Exponential Distance", "Logarithmic Distance")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


# Goodness-of-fit for Intercept-only and Top-ranked Models
##################################################################

# Fit stats function
fitstats <- function(fm) {
  observed <- getY(fm@data)
  expected <- fitted(fm)
  resids <- residuals(fm)
  sse <- sum(resids^2,na.rm=TRUE)
  chisq <- sum((observed - expected)^2 / expected,na.rm=TRUE)
  freeTuke <- sum((sqrt(observed) - sqrt(expected))^2,na.rm=TRUE)
  out <- c(SSE=sse, Chisq=chisq, freemanTukey=freeTuke)
  return(out)
}

(fmABNull.pb <- parboot(fm1.AB, fitstats, nsim=500, report=1))
(fmABFull.pb <- parboot(fm18.AB, fitstats, nsim=500, report=1))


# Check residuals for spatial autocorrelation of points within stands
##########################################################################################

Residuals<-t(residuals(fm18.AB))
Corr<-cor(Residuals,Residuals)
MeanCorr<-mean(abs(Corr))
StandPairs<-matrix(1:136, nrow=2)

PairCorr<-seq(1:68)
for (i in 1:68){
  PairCorr[i]<-abs(Corr[((i*2)-1),(i*2)])
}


##############################################################################################
##############################################################################################
##  Fit Threshold Models - Both Species Groups                                              ##
##############################################################################################

# Import  Data
setwd("C:/Users/Owner/Documents/1_Highlands2009_2011/Datasheets/Occupancy")
RNCounts <- read.csv("Occupancy.csv", header = TRUE)

# Sort and make long form count data into single row per point (Plethodon shermani,
# Desmognathus wrighti, and Stream-Breeding Salamanders Separated)
RNCounts <- RNCounts[with(RNCounts, order(Survey, Point)), ]
YStream <- matrix(RNCounts$AllStream, nrow = 136, ncol = 5, byrow = FALSE)
YPlsh <- matrix(RNCounts$AllPlsh, nrow = 136, ncol = 5, byrow = FALSE)
YDewr <- matrix(RNCounts$AllDewr, nrow = 136, ncol = 5, byrow = FALSE)

# Import Site Covariates
SiteCovs <- read.csv("OccuSiteCovs.csv", header = TRUE)
SiteCovs <- data.frame(Elev=SiteCovs[,"Elevation"],
                       Stand1=SiteCovs[,"StandAge"],
                       Stand2=(exp(SiteCovs[,"StandAge"]/100)),
                       Stand3=log(SiteCovs[,"StandAge"]),
                       North=SiteCovs[,"Northness"],
                       East=SiteCovs[,"Eastness"],
                       TPI30=SiteCovs[,"TPI30"],
                       TPI100=SiteCovs[,"TPI100"],
                       Dist=SiteCovs[,"Dist"],
                       DistWt=SiteCovs[,"DistWt"],
                       TWI=SiteCovs[,"TWI"],
                       Solar=SiteCovs[,"Solar"],
                       Slope=SiteCovs[,"Slope"],
                       Point=SiteCovs[,"Point"],
                       Stream=SiteCovs[,"Stream_Dist"],
                       Litter=SiteCovs[,"Litter"])

SiteCovs$StandT25 <- SiteCovs$Stand1-25
SiteCovs$StandT25 <- replace(SiteCovs$StandT25, SiteCovs$StandT25 < 0, 0)
SiteCovs$StandT50 <- SiteCovs$Stand1-50
SiteCovs$StandT50 <- replace(SiteCovs$StandT50, SiteCovs$StandT50 < 0, 0)
SiteCovs$StandT75 <- SiteCovs$Stand1-75
SiteCovs$StandT75 <- replace(SiteCovs$StandT75, SiteCovs$StandT75 < 0, 0)
SiteCovs$StandT100 <- SiteCovs$Stand1-100
SiteCovs$StandT100 <- replace(SiteCovs$StandT100, SiteCovs$StandT100 < 0, 0)

YPlsh1 <- as.data.frame(cbind(YPlsh,SiteCovs$Point,SiteCovs$Stand1))
colnames(YPlsh1)<-c("C1","C2","C3","C4","C5","Point","Stand")
YPlsh2 <- YPlsh1[order(YPlsh1$Stand,YPlsh1$Point),]

YStream1 <- as.data.frame(cbind(YStream,SiteCovs$Point,SiteCovs$Stand1))
colnames(YStream1)<-c("C1","C2","C3","C4","C5","Point","Stand")
YStream2 <- YStream1[order(YStream1$Stand,YStream1$Point),]

Stand<-rep(YStream1$Stand,5)
RNCounts2<-cbind(RNCounts,Stand)
RNCounts3<-RNCounts2[order(RNCounts2$Survey,RNCounts2$Stand,RNCounts2$Point),]

SiteCovs1 <- SiteCovs[order(SiteCovs$Stand1,SiteCovs$Point),]

# Create Unmarked Dataframe
Plsh.umf <- unmarkedFramePCount(y = YPlsh, siteCovs = SiteCovs, obsCovs = ObsCovs)
Stream.umf <- unmarkedFramePCount(y = YStream, siteCovs = SiteCovs, obsCovs = ObsCovs)

# Standardize Covariates
obsCovs(Plsh.umf)<- scale(obsCovs(Plsh.umf))
siteCovs(Plsh.umf)<-scale(siteCovs(Plsh.umf))

obsCovs(Stream.umf)<- scale(obsCovs(Stream.umf))
siteCovs(Stream.umf)<-scale(siteCovs(Stream.umf))


#####################################################################################
# Piecewise Test for Threshold
#####################################################################################

fmNoT.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1, mixture="NB", Plsh.umf)
fmT25.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1 + StandT25, mixture="NB", Plsh.umf)
fmT50.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1 + StandT50, mixture="NB", Plsh.umf)
fmT75.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1 + StandT75, mixture="NB", Plsh.umf)
fmT100.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1 + StandT100, mixture="NB", Plsh.umf)

# Name Models
mspartT.PS<- fitList(
  "No T" = fmNoT.PS,
  "25 Year T" = fmT25.PS,
  "50 Year T" = fmT50.PS,
  "75 Year T"=fmT75.PS,
  "100 Year T"=fmT100.PS)

(msT.PS <- modSel(mspartT.PS))

# Generate AICc Table #
Cand.models <- list(fmNoT.PS, fmT25.PS, fmT50.PS, fmT75.PS, fmT100.PS)
Modnames <- c("NoT", "25", "50", "75", "100")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)

fmNoT.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stream + Litter + North + East + TPI100 + TWI + Elev + Stand1*Dist, mixture="ZIP", Stream.umf)
fmT25.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stream + Litter + North + East + TPI100 + TWI + Elev + Stand1*Dist + StandT25, mixture="ZIP", Stream.umf)
fmT50.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stream + Litter + North + East + TPI100 + TWI + Elev + Stand1*Dist + StandT50, mixture="ZIP", Stream.umf)
fmT75.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stream + Litter + North + East + TPI100 + TWI + Elev + Stand1*Dist + StandT75, mixture="ZIP", Stream.umf)
fmT100.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Stream + Litter + North + East + TPI100 + TWI + Elev + Stand1*Dist + StandT100, mixture="ZIP", Stream.umf)

# Name Models
mspartT.AB<- fitList(
  "No T" = fmNoT.AB,
  "25 Year T" = fmT25.AB,
  "50 Year T" = fmT50.AB,
  "75 Year T"=fmT75.AB,
  "100 Year T"=fmT100.AB)

(msT.AB <- modSel(mspartT.AB))

# Generate AICc Table #
Cand.models <- list(fmNoT.AB, fmT25.AB, fmT50.AB, fmT75.AB, fmT100.AB)
Modnames <- c("NoT", "25", "50", "75", "100")

print(aictab(cand.set = Cand.models, modnames = Modnames,
             second.ord = TRUE), digits = 4)


####################################################################################################
#### Make Figures ##################################################################################
####################################################################################################

#######################################################
#### Make Figure of Detection Effects              ####
#######################################################


layout(matrix(c(1,2,0,3,4,0,0,0,0), 3, 3, byrow=TRUE))
par(mar=c(2,2,2,2))
par(oma=c(3,3,1,1))
par(family="serif")
par(mgp=c(3, 0.5, 0))



################################
Rain7new<-seq(-1.3,2.25,,200)
new<- data.frame(Rain7=Rain7new, Surftemp=0, Date=0, Time=0)
pred.PS<-predict(fm14.PS,type="det",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="det",newdata=new,appendData=TRUE)
Rain7new<-pred.PS[,"Rain7"]
Rain7scale<-scale(RNCounts$Rain7)
Rain7unscale<-(Rain7new*attr(Rain7scale,"scaled:scale")+attr(Rain7scale,"scaled:center"))

plot(pred.PS$Predicted ~ Rain7unscale, type="l", ylim=c(0,0.4),
     xlim=c(0,12),frame.plot=FALSE, axes=FALSE)
lines(pred.AB$Predicted ~ Rain7unscale, type="l",col="black", lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(2, tck=-0.01, lty=1, las=1, pos=0)
text(9, 0.11, expression(italic("P.shermani"))) 
text(4, 0.27, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Weekly Rainfall (cm)", side<-1, line=2, at=6, cex=1.0, col="black",outer=FALSE)
##############################
Tempnew<-seq(-4.0,3.2,,200)
new<- data.frame(Surftemp=Tempnew, Rain7=0, Date=0, Time=0)
pred.PS<-predict(fm14.PS,type="det",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="det",newdata=new,appendData=TRUE)
Tempnew<-pred.PS[,"Surftemp"]
Tempscale<-scale(RNCounts$Surftemp)
Tempunscale<-(Tempnew*attr(Tempscale,"scaled:scale")+attr(Tempscale,"scaled:center"))

plot(pred.PS$Predicted ~ Tempunscale, type="l", ylim=c(0,0.4),
     xlim=c(10,24),frame.plot=FALSE, axes=FALSE)
lines(pred.AB$Predicted ~ Tempunscale, type="l",col="black", lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(2, tck=-0.01, lty=1, las=1, pos=10)
text(15.9, 0.095, expression(italic("P.shermani"))) 
text(21, 0.25, expression(italic("D. ocoee/
     E. wilderae   "))) 
mtext(expression(paste("Ground Surface Temp (",degree,"C)")), side<-1, 
      line=2.3, at=17, cex=1.0, col="black",outer=FALSE)
################################
Datenew<-seq(-1.8,1.3,,200)
new<- data.frame(Date=Datenew, Surftemp=0, Rain7=0, Time=0)
pred.PS<-predict(fm14.PS,type="det",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="det",newdata=new,appendData=TRUE)
Datenew<-pred.PS[,"Date"]
Datescale<-scale(RNCounts$Date1)
Dateunscale<-(Datenew*attr(Datescale,"scaled:scale")+attr(Datescale,"scaled:center"))

plot(pred.PS$Predicted ~ Dateunscale, type="l", ylim=c(0,0.4),
     xlim=c(20,70),frame.plot=FALSE, axes=FALSE)
lines(pred.AB$Predicted ~ Dateunscale, type="l",col="black", lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0, labels=c("6/25","7/9","7/23","8/6"), at=c(24,38,52,66))
axis(2, tck=-0.01, lty=1, las=1, pos=20)
segments(20,0,x1=66,y1=0)
text(55, 0.12, expression(italic("P.shermani")))
text(33, 0.21, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Date", side<-1, line=2, at=46, cex=1.0, col="black",outer=FALSE)
################################
Timenew<-seq(-1.7,1.9,,200)
new<- data.frame(Time=Timenew, Surftemp=0, Rain7=0, Date=0)
pred.PS<-predict(fm14.PS,type="det",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="det",newdata=new,appendData=TRUE)
Timenew<-pred.PS[,"Time"]
Timescale<-scale(RNCounts$Time1)
Timeunscale<-(Timenew*attr(Timescale,"scaled:scale")+attr(Timescale,"scaled:center"))

plot(pred.PS$Predicted ~ Timeunscale, type="l", ylim=c(0,0.4),
     xlim=c(0,540),frame.plot=FALSE, axes=FALSE)
lines(pred.AB$Predicted ~ Timeunscale, type="l",col="black", lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0, labels=c("22:00","0:30","3:00","5:30"), at=c(60,210,360,510))
axis(2, tck=-0.01, lty=1, las=1, pos=0)
segments(0,0,x1=540,y1=0)
text(180, 0.095, expression(italic("P.shermani")))
text(350, 0.26, expression(italic("D. ocoee/E. wilderae"))) 
mtext("Time of Day", side<-1, line=2, at=255, cex=1.0, col="black",outer=FALSE)
################################

mtext("Detectability (p)", side<-2, line=0.5, at=.66, cex=1.0, col="black",outer=TRUE)
mtext("Detection Covariates", side<-1, line=-12, at=.33, cex=1.0, col="black",outer=TRUE)



#######################################################
#### Make Figure of Abundance Effects              ####
#######################################################

layout(matrix(c(4,2,3,0,1,5,0,0,0), 3, 3, byrow=TRUE))
par(mar=c(2,2,2,2))
par(oma=c(3,3,1,1))
par(family="serif")
par(mgp=c(3, 0.5, 0))

################################
Standnew<-seq(from=13, to=122, by=1)
Stand2scale<-scale(SiteCovs$Stand2)
Stand3scale<-scale(SiteCovs$Stand3)
Stand2.1<-(exp(Standnew/100)-attr(Stand2scale,"scaled:center"))/attr(Stand2scale,"scaled:scale")
Stand3.1<-(log(Standnew)-attr(Stand3scale,"scaled:center"))/attr(Stand3scale,"scaled:scale")

new<- data.frame(Stand1=Standnew, Stand2=Stand2.1, Stand3=Stand3.1, North=0,
                 East=0, Elev=0, Litter=0, TPI100=0, TWI=0, Stream=0, Dist=0)
pred.PS<-predict(fm14.PS,type="state",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)
Standnew<-pred.PS[,"Stand1"]

plot(pred.PS$Predicted ~ Standnew, type="p",
     xlim=c(0,140),frame.plot=FALSE, axes=FALSE, ylim=c(0,60))
axis(2, tck=-0.01, lty=1, las=1, pos=0, ylim=c(0,60))
par(new=T)
plot(pred.AB$Predicted ~ Standnew, type="l", xlim=c(0,140), col="black",
     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(4, tck=-0.01, lty=1, las=1, pos=140, ylim=c(0,10))
text(100, 3.8, expression(italic("P.shermani"))) 
text(35, 1.2, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Stand age (years)", side<-1, line=1.5, at=70, cex=1.0, col="black",outer=FALSE)
mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
Northnew<-seq(-1.8,1.3,,200)
new<- data.frame(North=Northnew, Stand1=0, Stand2=0, Stand3=0, East=0,
                 Elev=0, Litter=0, TPI100=0, TWI=0, Stream=0, Dist=0)
pred.PS<-predict(fm14.PS,type="state",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)
Northnew<-pred.PS[,"North"]
Northscale<-scale(SiteCovs$North)
Northunscale<-(Northnew*attr(Northscale,"scaled:scale")+attr(Northscale,"scaled:center"))

plot(pred.PS$Predicted ~ Northunscale, type="l",
     xlim=c(-1,1),frame.plot=FALSE, axes=FALSE, ylim=c(0,60))
axis(2, tck=-0.01, lty=1, las=1, pos=-1, ylim=c(0,60))
par(new=T)
plot(pred.AB$Predicted ~ Northunscale, type="l", xlim=c(-1,1), col="black",
     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(4, tck=-0.01, lty=1, las=1, pos=1, ylim=c(0,10))
text(-0.3, 5.5, expression(italic("P.shermani"))) 
text(-0.4, 1.8, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Northness", side<-1, line=1.5, at=0, cex=1.0, col="black",outer=FALSE)
mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
Eastnew<-seq(-1.8,1.3,,200)
new<- data.frame(East=Eastnew, Stand1=0, North=0, Elev=0, Litter=0, TPI100=0, 
                 TWI=0, Stream=0, Dist=0, Stand2=0, Stand3=0)
pred.PS<-predict(fm14.PS,type="state",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)
Eastnew<-pred.PS[,"East"]
Eastscale<-scale(SiteCovs$East)
Eastunscale<-(Eastnew*attr(Eastscale,"scaled:scale")+attr(Eastscale,"scaled:center"))

#plot(pred.PS$Predicted ~ Eastunscale, type="l",
#     xlim=c(-1,1),frame.plot=FALSE, axes=FALSE, ylim=c(0,60))
#axis(2, tck=-0.01, lty=1, las=1, pos=-1, ylim=c(0,60))
#par(new=T)
plot(pred.AB$Predicted ~ Eastunscale, type="l", xlim=c(-1,1), col="black",
     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(4, tck=-0.01, lty=1, las=1, pos=1, ylim=c(0,10))
text(0, 2.3, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Eastness", side<-1, line=1.5, at=0, cex=1.0, col="black",outer=FALSE)
#mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
Elevnew<-seq(-2.1,2.7,,200)
new<- data.frame(Elev=Elevnew, Stand1=0, North=0, East=0, Litter=0, TPI100=0, TWI=0,
                 Stream=0, Stand2=0, Stand3=0, Dist=0)
pred.PS<-predict(fm14.PS,type="state",newdata=new,appendData=TRUE)
pred.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)
Elevnew<-pred.PS[,"Elev"]
Elevscale<-scale(SiteCovs$Elev)
Elevunscale<-(Elevnew*attr(Elevscale,"scaled:scale")+attr(Elevscale,"scaled:center"))

plot(pred.PS$Predicted ~ Elevunscale, type="l",
     xlim=c(1200,1600),frame.plot=FALSE, axes=FALSE, ylim=c(0,60))
axis(2, tck=-0.01, lty=1, las=1, pos=1200, ylim=c(0,60))
par(new=T)
#plot(pred.AB$Predicted ~ Elevunscale, type="l", xlim=c(1200,1600), col="black",
#     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
#axis(4, tck=-0.01, lty=1, las=1, pos=1600, ylim=c(0,10))
text(1475, 46, expression(italic("P.shermani"))) 
#text(100, 2.5, expression(italic("D. ocoee/
#E. wilderae"))) 
mtext("Elevation (m)", side<-1, line=1.5, at=1400, cex=1.0, col="black",outer=FALSE)
mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=30, cex=0.8, col="black",outer=FALSE)
#mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
#TPInew<-seq(-2.8,2.7,,200)
#new<- data.frame(TPI100=TPInew, Stand1=0, North=0, East=0, Litter=0, Elev=0, TWI=0,
#                 Stand2=0, Stand3=0, Dist=0, Stream=0)
#pred.PS<-predict(fm14.PS,type="state",newdata=new,appendData=TRUE)
#pred.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)
#TPInew<-pred.PS[,"TPI100"]
#TPIscale<-scale(SiteCovs$TPI100)
#TPIunscale<-(TPInew*attr(TPIscale,"scaled:scale")+attr(TPIscale,"scaled:center"))

#plot(pred.PS$Predicted ~ TPIunscale, type="l",
#     xlim=c(-15,15),frame.plot=FALSE, axes=FALSE, ylim=c(0,60))
#axis(2, tck=-0.01, lty=1, las=1, pos=-15, ylim=c(0,60))
#par(new=T)
#plot(pred.AB$Predicted ~ TPIunscale, type="l", xlim=c(-15,15), col="black",
#     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
#axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
#axis(4, tck=-0.01, lty=1, las=1, pos=15, ylim=c(0,10))
#text(40, 9, expression(italic("P.shermani"))) 
#text(-5, 3, expression(italic("D. ocoee/
#E. wilderae"))) 
#mtext("Topographic Position", side<-1, line=1.5, at=0, cex=1.0, col="black",outer=FALSE)
#mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
#mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
#TWInew<-seq(-1.3,4.0,,200)
#new<- data.frame(TWI=TWInew, Stand1=0, North=0, East=0, Litter=0, Elev=0, TPI100=0, Stream=0)
#pred.AB<-predict(fm12.AB,type="state",newdata=new,appendData=TRUE)
#TWInew<-pred.AB[,"TWI"]
#TWIscale<-scale(SiteCovs$TWI)
#TWIunscale<-(TWInew*attr(TWIscale,"scaled:scale")+attr(TWIscale,"scaled:center"))

#plot(pred.AB$Predicted ~ TWIunscale, type="l", xlim=c(0,10), col="black",
#     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
#axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
#axis(4, tck=-0.01, lty=1, las=1, pos=10, ylim=c(0,10))
#text(40, 9, expression(italic("P.shermani"))) 
#text(7, 4, expression(italic("D. ocoee/
#E. wilderae"))) 
#mtext("Topographic Wetness", side<-1, line=1.5, at=5, cex=1.0, col="black",outer=FALSE)
#mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
#mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

################################
Litternew<-seq(-1.5,4.0,,200)
new<- data.frame(Litter=Litternew, Stand1=0, North=0, East=0, TWI=0, Elev=0, 
                 Stand2=0, Stand3=0, Dist=0, TPI100=0, Stream=0)
pred.AB<-predict(fm14.AB,type="state",newdata=new,appendData=TRUE)
Litternew<-pred.AB[,"Litter"]
Litterscale<-scale(SiteCovs$Litter)
Litterunscale<-(Litternew*attr(Litterscale,"scaled:scale")+attr(Litterscale,"scaled:center"))

plot(pred.AB$Predicted ~ Litterunscale, type="l", xlim=c(0.5,6), col="black",
     ylim=c(0,6), frame.plot=FALSE, axes=FALSE, lty=8)
axis(1, tck=-0.01, line=-0.3, lty=1, pos=0)
axis(4, tck=-0.01, lty=1, las=1, pos=6, ylim=c(0,10))
#text(40, 9, expression(italic("P.shermani"))) 
text(2, 2.2, expression(italic("D. ocoee/
E. wilderae"))) 
mtext("Leaf Litter Depth (cm)", side<-1, line=1.5, at=3.5, cex=1.0, col="black",outer=FALSE)
#mtext(expression(italic("P.shermani")), side<-2, line=1.25, at=3, cex=0.8, col="black",outer=FALSE)
mtext(expression(italic("D.ocoee/E.wilderae")), side<-4, line=0.75, at=3, cex=0.8, col="black",outer=FALSE)

mtext("Abundance", side<-2, line=1, at=0.66, cex=1.0, col="black",outer=TRUE)
mtext("Abundance Covariates", side<-1, line=-12, at=0.5, cex=1.0, col="black",outer=TRUE)


par(mgp=c(3, 1, 0))

#######################################################
#### Make Figure of Stand Age Effects #################
#######################################################

ages<-seq(from=12, to=122, by=10)

Stand1scale<-scale(SiteCovs$Stand1)
Stand2scale<-scale(SiteCovs$Stand2)
Stand3scale<-scale(SiteCovs$Stand3)

Stand1.1<-(ages-attr(Stand1scale,"scaled:center"))/attr(Stand1scale,"scaled:scale")
Stand2.1<-(exp(ages/100)-attr(Stand2scale,"scaled:center"))/attr(Stand2scale,"scaled:scale")
Stand3.1<-(log(ages)-attr(Stand3scale,"scaled:center"))/attr(Stand3scale,"scaled:scale")

distances<-seq(from=0, to=400, by=40)
distscale<-scale(SiteCovs$Dist)
distscaled<-(distances-attr(distscale,"scaled:center"))/attr(distscale,"scaled:scale")

#############################################################################################
new<- data.frame(Stand1=rep(Stand1.1,each=length(distances)), Stand2=rep(Stand2.1,each=length(distances)),
                 Stand3=rep(Stand3.1,each=length(distances)), Elev=0, North=0, East=0,
                 TPI100=0, TWI=0, Litter=0, Stream=0, Dist=rep(distscaled,length(Stand1.1)))
preddist.PS<-predict(fm17.PS,type="state",newdata=new,appendData=TRUE)
preddist.AB<-predict(fm18.AB,type="state",newdata=new,appendData=TRUE)

Stand1<-preddist.PS[,"Stand1"]
preddist.PS$Stand1<-(Stand1*attr(Stand1scale,"scaled:scale")+attr(Stand1scale,"scaled:center"))
preddist.AB$Stand1<-(Stand1*attr(Stand1scale,"scaled:scale")+attr(Stand1scale,"scaled:center"))

preddist.PS$Dist<-preddist.PS$Dist*attr(distscale,"scaled:scale")+attr(distscale,"scaled:center")
preddist.AB$Dist<-preddist.AB$Dist*attr(distscale,"scaled:scale")+attr(distscale,"scaled:center")

PSExp<-cbind(preddist.PS$Stand1,preddist.PS$Dist,preddist.PS$Predicted)
ABExp<-cbind(preddist.AB$Stand1,preddist.AB$Dist,preddist.AB$Predicted)

par(family="serif")

wireframe(preddist.AB$Predicted ~ preddist.AB$Dist*preddist.AB$Stand1,
          scales = list(arrows = FALSE),xlim=c(0,400), ylim=c(0,120),
          drape = TRUE, colorkey = list(T, space="bottom", cex=1.5),
          col.regions = grayscale(80),
          screen = list(z = 295, x = -70),
          zlim=c(0,10), xlab=list(label="Distance from Stand Edge (m)",rot=-54, cex=1.2),
          ylab=list(label="Stand Age (Years)", rot=13, cex=1.2),
          zlab=list(label="Predicted Abundance", rot=90, cex=1.2),
          par.settings = list(axis.line = list(col = "transparent")))


xlim=c(0,100), ylim=c(0,100),

predict<-matrix(preddist.AB$Predicted,nrow=length(ages),ncol=length(distscaled),byrow=TRUE)
filled.contour3(ages,distances,predict,color=topo.colors,xlab = "Stand Age",ylab = "Distance to Stand Edge",
                main="")

write.table(ABExp,"C:/Users/Owner/Desktop/ABExp.txt")
write.table(PSExp,"C:/Users/Owner/Desktop/PSExp.txt")


contour(x=ages, y=distances, z=predict, add=FALSE, nlevels=16, col = "black", method="flattest", xlab = "Stand Age",ylab = "Distance to Stand Edge")
mtext("Distance to Stand Edge", side<-2, line=1, at=0.5, cex=1.0, col="black",outer=TRUE)
mtext("Stand Age", side<-1, line=1, at=0.5, cex=1.0, col="black",outer=TRUE)


title<-"blah"  
title(main=title,cex.main=1.0,line=0.35)













#####################################################################################
# Moving Window Test for Threshold
#####################################################################################

StoreAge<-matrix(0, nrow=15, ncol=4)
PointNumber<-67

for (g in seq(1:10)){
  k<-1
  for (i in c(1,5,13,21,31,41,49,51,53,57,59,61,65,67,69)){
    #71,73,75,77,79,81,85,95,99,130,132,134)){
  
    #YPlshrun <- YPlsh2[(i:136),(1:5)]
    #rIDs <- sample(1:nrow(YPlshrun),floor(PointNumber/nrow(YPlshrun)*nrow(YPlshrun)))
    #YPlshrun <- YPlshrun[rIDs,]
    
    YStreamrun <- YStream2[(i:136),(1:5)]
    rIDs <- sample(1:nrow(YStreamrun),floor(PointNumber/nrow(YStreamrun)*nrow(YStreamrun)))
    YStreamrun <- YStreamrun[rIDs,]
    
    SiteCovsrun <- SiteCovs1[(i:136),]
    SiteCovsrun <- SiteCovsrun[rIDs,]


    Time <- matrix(RNCounts$Time1, 136, 5, byrow = FALSE)
    Time <- Time[(i:136),]
    Surftemp <- matrix(RNCounts$Surftemp, 136, 5, byrow = FALSE)
    Surftemp <- Surftemp[(i:136),]
    Rain7 <- matrix(RNCounts$Rain7, 136, 5, byrow = FALSE)
    Rain7 <- Rain7[(i:136),]
    Date <- matrix(RNCounts$Date1, 136, 5, byrow = FALSE)
    Date <- Date[(i:136),]

    # List Possible Observation Covariates
    ObsCovsrun <- list(Time = Time[rIDs,],
                Surftemp = Surftemp[rIDs,],
                Rain7 = Rain7[rIDs,],
                Date = Date[rIDs,])

    # Create Unmarked Dataframe
    #Plsh.umf <- unmarkedFramePCount(y = YPlshrun, siteCovs = SiteCovsrun, obsCovs = ObsCovsrun)
    Stream.umf <- unmarkedFramePCount(y = YStreamrun, siteCovs = SiteCovsrun, obsCovs = ObsCovsrun)
    
    
    # Standardize Covariates
    obsCovs(Plsh.umf)<- scale(obsCovs(Plsh.umf))
    siteCovs(Plsh.umf)<-scale(siteCovs(Plsh.umf))

    obsCovs(Stream.umf)<- scale(obsCovs(Stream.umf))
    siteCovs(Stream.umf)<-scale(siteCovs(Stream.umf))
    
    #fm13.PS <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ North + East + Elev + Stand1, mixture="NB", Plsh.umf)
    fm13.AB <- pcount(~Rain7 + Time + I(Time^2) + Date + Surftemp + I(Surftemp^2) ~ Litter + North + East + TPI100 + TWI + Elev + Stream + Stand1,     mixture="ZIP", Stream.umf)
    
    
    #SEage <- as.matrix(SE(fm13.PS))
    SEage <- as.matrix(SE(fm13.AB))
    SEage <- SEage[5,1]
    
    #Coefage <- as.matrix(coef(fm13.PS))
    Coefage <- as.matrix(coef(fm13.AB))
    print(Coefage <- Coefage[5,1])
    
    StoreAge[k,1] <- min(SiteCovsrun$Stand1)
    StoreAge[k,2] <- ((1/g)*Coefage)+(1-(1/g))*StoreAge[k,2]  #Computes mean coef value
    StoreAge[k,3] <- ((1/g)*SEage)+(1-(1/g))*StoreAge[k,3]  
    #StoreAge[k,4] <- Coefage - 1.96*SEage

    nameRun <- paste("fm14.",i,sep="")
    #print(assign(nameRun, fm13.PS))
    print(assign(nameRun, fm13.AB))
    
    k <- (k+1)

  }
}

#### Loops Closed ####

layout(matrix(1))
StoreAge1 <- rbind(StoreAge,(c(100, 0.0803, 0.0409, 0)))
plotCI(StoreAge1[,1],y=StoreAge1[,2],uiw=StoreAge1[,3],err="y",
       sfrac=0.01,gap=0,add=FALSE,scol=NULL,xaxt="n",
       ylim=c(-0.25,0.25), xlim=c(10,100), frame.plot=FALSE)
axis(1, seq(10,90,,5), tick=TRUE, labels=TRUE)
abline(h=0, lty=3)
abline(v=90, lty=1)
mtext("Covariate estimate", side<-2, line=1, at=0.5, cex=1.0, col="black",outer=TRUE)
mtext("Stand age (years)", side<-1, line=1, at=0.5, cex=1.0, col="black",outer=TRUE)
mtext("Overall
 Estimate", side<-1, line=-13, at=100, cex=1.0, col="black",outer=FALSE)
